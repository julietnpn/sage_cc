# Generated by Django 2.0.7 on 2019-02-23 19:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EcosystemRelationshipProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'ecosystemRelationshipProperty',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EcosystemRelationshipValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'ecosystemRelationshipValue',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='HumanUseProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'humanUseProperty',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'layer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('plantImage', models.CharField(blank=True, max_length=500, null=True)),
                ('layer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planting.Layer')),
            ],
            options={
                'db_table': 'plant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlantEcosystemRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ecosystemRelationshipProperty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planting.EcosystemRelationshipProperty')),
                ('ecosystemRelationshipValue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planting.EcosystemRelationshipValue')),
                ('plant_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planting.Plant')),
            ],
            options={
                'db_table': 'plantEcosystemRelationship',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PlantHumanUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('human_use_property_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planting.HumanUseProperty')),
                ('plant_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planting.Plant')),
            ],
            options={
                'db_table': 'plantHumanUse',
                'managed': True,
            },
        ),
    ]
